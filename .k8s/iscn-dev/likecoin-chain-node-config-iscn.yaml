kind: ConfigMap
metadata:
  name: likecoin-chain-node-config-iscn-dev
  namespace: default
apiVersion: v1
data:
  config.toml: |
    # This is a TOML config file.
    # For more information, see https://github.com/toml-lang/toml

    ##### main base config options #####

    # TCP or UNIX socket address of the ABCI application,
    # or the name of an ABCI application compiled in with the Tendermint binary
    proxy_app = "tcp://127.0.0.1:26658"

    # A custom human readable name for this node
    moniker = "k8s-sample-iscn-dev-node"

    # If this node is many blocks behind the tip of the chain, FastSync
    # allows them to catchup quickly by downloading blocks in parallel
    # and verifying their commits
    fast_sync = true

    # Database backend: goleveldb | cleveldb | boltdb
    # * goleveldb (github.com/syndtr/goleveldb - most popular implementation)
    #   - pure go
    #   - stable
    # * cleveldb (uses levigo wrapper)
    #   - fast
    #   - requires gcc
    #   - use cleveldb build tag (go build -tags cleveldb)
    # * boltdb (uses etcd's fork of bolt - github.com/etcd-io/bbolt)
    #   - EXPERIMENTAL
    #   - may be faster is some use-cases (random reads - indexer)
    #   - use boltdb build tag (go build -tags boltdb)
    db_backend = "goleveldb"

    # Database directory
    db_dir = "data"

    # Output level for logging, including package level options
    log_level = "main:info,state:info,*:error"

    # Output format: 'plain' (colored text) or 'json'
    log_format = "plain"

    ##### additional base config options #####

    # Path to the JSON file containing the initial validator set and other meta data
    genesis_file = "config/genesis.json"

    # Path to the JSON file containing the private key to use as a validator in the consensus protocol
    priv_validator_key_file = "config/priv_validator_key.json"

    # Path to the JSON file containing the last sign state of a validator
    priv_validator_state_file = "data/priv_validator_state.json"

    # TCP or UNIX socket address for Tendermint to listen on for
    # connections from an external PrivValidator process
    priv_validator_laddr = ""

    # Path to the JSON file containing the private key to use for node authentication in the p2p protocol
    node_key_file = "config/node_key.json"

    # Mechanism to connect to the ABCI application: socket | grpc
    abci = "socket"

    # TCP or UNIX socket address for the profiling server to listen on
    prof_laddr = "localhost:6060"

    # If true, query the ABCI app on connecting to a new peer
    # so the app can decide if we should keep the connection or not
    filter_peers = false

    ##### advanced configuration options #####

    ##### rpc server configuration options #####
    [rpc]

    # TCP or UNIX socket address for the RPC server to listen on
    laddr = "tcp://127.0.0.1:26657"

    # A list of origins a cross-domain request can be executed from
    # Default value '[]' disables cors support
    # Use '["*"]' to allow any origin
    cors_allowed_origins = []

    # A list of methods the client is allowed to use with cross-domain requests
    cors_allowed_methods = ["HEAD", "GET", "POST", ]

    # A list of non simple headers the client is allowed to use with cross-domain requests
    cors_allowed_headers = ["Origin", "Accept", "Content-Type", "X-Requested-With", "X-Server-Time", ]

    # TCP or UNIX socket address for the gRPC server to listen on
    # NOTE: This server only supports /broadcast_tx_commit
    grpc_laddr = ""

    # Maximum number of simultaneous connections.
    # Does not include RPC (HTTP&WebSocket) connections. See max_open_connections
    # If you want to accept a larger number than the default, make sure
    # you increase your OS limits.
    # 0 - unlimited.
    # Should be < {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}
    # 1024 - 40 - 10 - 50 = 924 = ~900
    grpc_max_open_connections = 900

    # Activate unsafe RPC commands like /dial_seeds and /unsafe_flush_mempool
    unsafe = false

    # Maximum number of simultaneous connections (including WebSocket).
    # Does not include gRPC connections. See grpc_max_open_connections
    # If you want to accept a larger number than the default, make sure
    # you increase your OS limits.
    # 0 - unlimited.
    # Should be < {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}
    # 1024 - 40 - 10 - 50 = 924 = ~900
    max_open_connections = 900

    # Maximum number of unique clientIDs that can /subscribe
    # If you're using /broadcast_tx_commit, set to the estimated maximum number
    # of broadcast_tx_commit calls per block.
    max_subscription_clients = 100

    # Maximum number of unique queries a given client can /subscribe to
    # If you're using GRPC (or Local RPC client) and /broadcast_tx_commit, set to
    # the estimated # maximum number of broadcast_tx_commit calls per block.
    max_subscriptions_per_client = 5

    # How long to wait for a tx to be committed during /broadcast_tx_commit.
    # WARNING: Using a value larger than 10s will result in increasing the
    # global HTTP write timeout, which applies to all connections and endpoints.
    # See https://github.com/tendermint/tendermint/issues/3435
    timeout_broadcast_tx_commit = "10s"

    # Maximum size of request body, in bytes
    max_body_bytes = 1000000

    # Maximum size of request header, in bytes
    max_header_bytes = 1048576

    # The path to a file containing certificate that is used to create the HTTPS server.
    # Migth be either absolute path or path related to tendermint's config directory.
    # If the certificate is signed by a certificate authority,
    # the certFile should be the concatenation of the server's certificate, any intermediates,
    # and the CA's certificate.
    # NOTE: both tls_cert_file and tls_key_file must be present for Tendermint to create HTTPS server. Otherwise, HTTP server is run.
    tls_cert_file = ""

    # The path to a file containing matching private key that is used to create the HTTPS server.
    # Migth be either absolute path or path related to tendermint's config directory.
    # NOTE: both tls_cert_file and tls_key_file must be present for Tendermint to create HTTPS server. Otherwise, HTTP server is run.
    tls_key_file = ""

    ##### peer to peer configuration options #####
    [p2p]

    # Address to listen for incoming connections
    laddr = "tcp://0.0.0.0:26656"

    # Address to advertise to peers for them to dial
    # If empty, will use the same port as the laddr,
    # and will introspect on the listener or use UPnP
    # to figure out the address.
    external_address = ""

    # Comma separated list of seed nodes to connect to
    seeds = ""

    # Comma separated list of nodes to keep persistent connections to
    persistent_peers = ""

    # UPNP port forwarding
    upnp = false

    # Path to address book
    addr_book_file = "config/addrbook.json"

    # Set true for strict address routability rules
    # Set false for private or local networks
    addr_book_strict = true

    # Maximum number of inbound peers
    max_num_inbound_peers = 40

    # Maximum number of outbound peers to connect to, excluding persistent peers
    max_num_outbound_peers = 10

    # Time to wait before flushing messages out on the connection
    flush_throttle_timeout = "100ms"

    # Maximum size of a message packet payload, in bytes
    max_packet_msg_payload_size = 1024

    # Rate at which packets can be sent, in bytes/second
    send_rate = 5120000

    # Rate at which packets can be received, in bytes/second
    recv_rate = 5120000

    # Set true to enable the peer-exchange reactor
    pex = true

    # Seed mode, in which node constantly crawls the network and looks for
    # peers. If another node asks it for addresses, it responds and disconnects.
    #
    # Does not work if the peer-exchange reactor is disabled.
    seed_mode = false

    # Comma separated list of peer IDs to keep private (will not be gossiped to other peers)
    private_peer_ids = ""

    # Toggle to disable guard against peers connecting from the same ip.
    allow_duplicate_ip = false

    # Peer connection configuration.
    handshake_timeout = "20s"
    dial_timeout = "3s"

    ##### mempool configuration options #####
    [mempool]

    recheck = true
    broadcast = true
    wal_dir = ""

    # Maximum number of transactions in the mempool
    size = 5000

    # Limit the total size of all txs in the mempool.
    # This only accounts for raw transactions (e.g. given 1MB transactions and
    # max_txs_bytes=5MB, mempool will only accept 5 transactions).
    max_txs_bytes = 1073741824

    # Size of the cache (used to filter transactions we saw earlier) in transactions
    cache_size = 10000

    # Maximum size of a single transaction.
    # NOTE: the max size of a tx transmitted over the network is {max_tx_bytes} + {amino overhead}.
    max_tx_bytes = 1048576

    ##### fast sync configuration options #####
    [fastsync]

    # Fast Sync version to use:
    #   1) "v0" (default) - the legacy fast sync implementation
    #   2) "v1" - refactor of v0 version for better testability
    version = "v0"

    ##### consensus configuration options #####
    [consensus]

    wal_file = "data/cs.wal/wal"

    timeout_propose = "3s"
    timeout_propose_delta = "500ms"
    timeout_prevote = "1s"
    timeout_prevote_delta = "500ms"
    timeout_precommit = "1s"
    timeout_precommit_delta = "500ms"
    timeout_commit = "5s"

    # Make progress as soon as we have all the precommits (as if TimeoutCommit = 0)
    skip_timeout_commit = false

    # EmptyBlocks mode and possible interval between empty blocks
    create_empty_blocks = true
    create_empty_blocks_interval = "0s"

    # Reactor sleep duration parameters
    peer_gossip_sleep_duration = "100ms"
    peer_query_maj23_sleep_duration = "2s"

    ##### transactions indexer configuration options #####
    [tx_index]

    # What indexer to use for transactions
    #
    # Options:
    #   1) "null"
    #   2) "kv" (default) - the simplest possible indexer, backed by key-value storage (defaults to levelDB; see DBBackend).
    indexer = "kv"

    # Comma-separated list of tags to index (by default the only tag is "tx.hash")
    #
    # You can also index transactions by height by adding "tx.height" tag here.
    #
    # It's recommended to index only a subset of tags due to possible memory
    # bloat. This is, of course, depends on the indexer's DB and the volume of
    # transactions.
    index_tags = ""

    # When set to true, tells indexer to index all tags (predefined tags:
    # "tx.hash", "tx.height" and all tags from DeliverTx responses).
    #
    # Note this may be not desirable (see the comment above). IndexTags has a
    # precedence over IndexAllTags (i.e. when given both, IndexTags will be
    # indexed).
    index_all_tags = true

    ##### instrumentation configuration options #####
    [instrumentation]

    # When true, Prometheus metrics are served under /metrics on
    # PrometheusListenAddr.
    # Check out the documentation for the list of available metrics.
    prometheus = false

    # Address to listen for Prometheus collector(s) connections
    prometheus_listen_addr = ":26660"

    # Maximum number of simultaneous connections.
    # If you want to accept a larger number than the default, make sure
    # you increase your OS limits.
    # 0 - unlimited.
    max_open_connections = 3

    # Instrumentation namespace
    namespace = "tendermint"

  app.toml: |
    # This is a TOML config file.
    # For more information, see https://github.com/toml-lang/toml

    ##### main base config options #####

    # The minimum gas prices a validator is willing to accept for processing a
    # transaction. A transaction's fees must meet the minimum of any denomination
    # specified in this config (e.g. 0.25token1;0.0001token2).
    minimum-gas-prices = ""

    # HaltHeight contains a non-zero block height at which a node will gracefully
    # halt and shutdown that can be used to assist upgrades and testing.
    #
    # Note: State will not be committed on the corresponding height and any logs
    # indicating such can be safely ignored.
    halt-height = 0

    # HaltTime contains a non-zero minimum block time (in Unix seconds) at which
    # a node will gracefully halt and shutdown that can be used to assist upgrades
    # and testing.
    #
    # Note: State will not be committed on the corresponding height and any logs
    # indicating such can be safely ignored.
    halt-time = 0

  genesis.json: |
    {
      "genesis_time": "2020-05-05T16:23:15.811805318Z",
      "chain_id": "local-test-chain",
      "consensus_params": {
        "block": {
          "max_bytes": "22020096",
          "max_gas": "-1",
          "time_iota_ms": "1000"
        },
        "evidence": {
          "max_age": "100000"
        },
        "validator": {
          "pub_key_types": [
            "ed25519"
          ]
        }
      },
      "app_hash": "",
      "app_state": {
        "crisis": {
          "constant_fee": {
            "denom": "nanolike",
            "amount": "1000"
          }
        },
        "auth": {
          "params": {
            "max_memo_characters": "256",
            "tx_sig_limit": "7",
            "tx_size_cost_per_byte": "10",
            "sig_verify_cost_ed25519": "590",
            "sig_verify_cost_secp256k1": "1000"
          }
        },
        "bank": {
          "send_enabled": true
        },
        "iscn": {
          "params": {
            "feePerByte": {
              "denom": "nanolike",
              "amount": "1000000"
            }
          }
        },
        "genutil": {
          "gentxs": [
            {
              "type": "cosmos-sdk/StdTx",
              "value": {
                "msg": [
                  {
                    "type": "cosmos-sdk/MsgCreateValidator",
                    "value": {
                      "description": {
                        "moniker": "local-dev",
                        "identity": "",
                        "website": "",
                        "details": ""
                      },
                      "commission": {
                        "rate": "0.100000000000000000",
                        "max_rate": "0.200000000000000000",
                        "max_change_rate": "0.010000000000000000"
                      },
                      "min_self_delegation": "1",
                      "delegator_address": "cosmos13sh5wnu006fgmsrsn4uycyx487jfjykvum4rr5",
                      "validator_address": "cosmosvaloper13sh5wnu006fgmsrsn4uycyx487jfjykve0pk08",
                      "pubkey": "cosmosvalconspub1zcjduepq85ncy8mz5m9w88gd2vq8yx2vjq8an60z49wd9hryapcw5yck5a4qul6rck",
                      "value": {
                        "denom": "nanolike",
                        "amount": "10000000000"
                      }
                    }
                  }
                ],
                "fee": {
                  "amount": [],
                  "gas": "200000"
                },
                "signatures": [
                  {
                    "pub_key": {
                      "type": "tendermint/PubKeySecp256k1",
                      "value": "A1kIfwSa9vrIoMqK/Sh7YxEnNHftdaqrj0+r9Ih5adfg"
                    },
                    "signature": "deXRKoXSRbeN9WUlevQdk0twGbfXpYoUc+hz+kNxq1x9ryk4o5Hd3MPbBcocI9ixi1ciQzl1GDRF7/ZdNXwjAA=="
                  }
                ],
                "memo": "e4c9839955f994ed53e77207cab614e0af71f11f@192.168.1.186:26656"
              }
            }
          ]
        },
        "gov": {
          "starting_proposal_id": "1",
          "deposits": null,
          "votes": null,
          "proposals": null,
          "deposit_params": {
            "min_deposit": [
              {
                "denom": "nanolike",
                "amount": "10000000"
              }
            ],
            "max_deposit_period": "172800000000000"
          },
          "voting_params": {
            "voting_period": "172800000000000"
          },
          "tally_params": {
            "quorum": "0.334000000000000000",
            "threshold": "0.500000000000000000",
            "veto": "0.334000000000000000"
          }
        },
        "supply": {
          "supply": []
        },
        "slashing": {
          "params": {
            "max_evidence_age": "120000000000",
            "signed_blocks_window": "100",
            "min_signed_per_window": "0.500000000000000000",
            "downtime_jail_duration": "600000000000",
            "slash_fraction_double_sign": "0.050000000000000000",
            "slash_fraction_downtime": "0.010000000000000000"
          },
          "signing_infos": {},
          "missed_blocks": {}
        },
        "whitelist": {
          "whitelist": null,
          "params": {
            "approver": ""
          }
        },
        "accounts": [
          {
            "address": "cosmos13sh5wnu006fgmsrsn4uycyx487jfjykvum4rr5",
            "coins": [
              {
                "denom": "nanolike",
                "amount": "100000000000"
              }
            ],
            "sequence_number": "0",
            "account_number": "0",
            "original_vesting": [],
            "delegated_free": [],
            "delegated_vesting": [],
            "start_time": "0",
            "end_time": "0",
            "module_name": "",
            "module_permissions": [
              ""
            ]
          }
        ],
        "staking": {
          "params": {
            "unbonding_time": "1814400000000000",
            "max_validators": 100,
            "max_entries": 7,
            "bond_denom": "nanolike"
          },
          "last_total_power": "0",
          "last_validator_powers": null,
          "validators": null,
          "delegations": null,
          "unbonding_delegations": null,
          "redelegations": null,
          "exported": false
        },
        "distribution": {
          "fee_pool": {
            "community_pool": []
          },
          "community_tax": "0.020000000000000000",
          "base_proposer_reward": "0.010000000000000000",
          "bonus_proposer_reward": "0.040000000000000000",
          "withdraw_addr_enabled": true,
          "delegator_withdraw_infos": [],
          "previous_proposer": "",
          "outstanding_rewards": [],
          "validator_accumulated_commissions": [],
          "validator_historical_rewards": [],
          "validator_current_rewards": [],
          "delegator_starting_infos": [],
          "validator_slash_events": []
        },
        "params": null,
        "mint": {
          "minter": {
            "inflation": "0.130000000000000000",
            "annual_provisions": "0.000000000000000000"
          },
          "params": {
            "mint_denom": "nanolike",
            "inflation_rate_change": "0.130000000000000000",
            "inflation_max": "0.200000000000000000",
            "inflation_min": "0.070000000000000000",
            "goal_bonded": "0.670000000000000000",
            "blocks_per_year": "6311520"
          }
        }
      }
    }

  priv_validator_key.json: |
    {
      "address": "B32A20EA0D0E38AE944DF7421F7EF3E474250BBE",
      "pub_key": {
        "type": "tendermint/PubKeyEd25519",
        "value": "PSeCH2KmyuOdDVMAchlMkA/Z6eKpXNLcZOhw6hMWp2o="
      },
      "priv_key": {
        "type": "tendermint/PrivKeyEd25519",
        "value": "IJEfD9Z0w/iHzzDOJF0UX4XzR7NgIAMU8bjQIy8wPAo9J4IfYqbK450NUwByGUyQD9np4qlc0txk6HDqExanag=="
      }
    }
